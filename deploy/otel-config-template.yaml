receivers:
  statsd:

  hostmetrics:
    collection_interval: 1m
    scrapers:
      cpu:
      load:
      memory:
      network:

processors:
  filter:
    error_mode: ignore
    metrics:
      metric:
        - 'name == "k6.http_req_blocked"'
        - 'name == "k6.http_req_connecting"'
        - 'name == "k6.http_req_tls_handshaking"'
        - 'name == "k6.http_req_sending"'
        - 'name == "k6.http_req_waiting"'
        - 'name == "k6.http_req_receiving"'

  batch:
    send_batch_size: 1000
    send_batch_max_size: 1000

  metricstransform:
    transforms:
      - include: ^.*$
        match_type: regexp
        action: update
        operations:
          - action: add_label
            new_label: build_id
            new_value: "{ID}"
      - include: ^k6\.check\.(?P<name>.*?)\.(?P<result>.*)
        match_type: regexp
        action: combine
        new_name: k6.checks
        submatch_case: lower

exporters:
  otlphttp:
    endpoint: "{URL}/api/v2/otlp"
    headers:
      Authorization: "Api-Token {APITOKEN}"

service:
  telemetry:
    logs:
      level: "debug"

  pipelines:
    metrics:
      receivers: [statsd, hostmetrics]
      processors: [filter, batch, metricstransform]
      exporters: [otlphttp]
